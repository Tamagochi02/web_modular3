generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id            String              @id @default(uuid())
  nombre        String              @db.VarChar(100)
  correo        String              @db.VarChar(100) @unique
  rol           Rol
  foto          String?             @db.Text
  estaActivo    Boolean             @default(true)
  contrasena    String              @db.VarChar(100)
  creadoEn      DateTime            @default(now())
  actualizadoEn DateTime            @updatedAt
  matricula     Matricula?
  observaciones Observacion[]
  proyectos     ProyectosUsuarios[]
}

enum Rol {
  Alumno
  Docente
  Administrador
}

model Matricula {
  id        String  @id @default(uuid())
  usuario   Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId String  @unique
  matricula String  @db.VarChar(255)
}

enum Estado {
  Entregado
  Debe_modificarse
  Revisado
  Modificado
}

enum Modulo {
  Modulo_1
  Modulo_2
  Modulo_3
}

enum Evaluacion {
  Acreditado
  No_acreditado
  Sin_evaluar
}

model Proyecto {
  id            String              @id @default(uuid())
  nombre        String              @db.VarChar(200)
  estado        Estado              @default(Entregado)
  modulo        Modulo
  evaluacion    Evaluacion          @default(Sin_evaluar)
  creadoEn      DateTime            @default(now())
  actualizadoEn DateTime            @updatedAt
  usuarios      ProyectosUsuarios[]
  documentos    Documento[]
}

model Documento {
  id            String        @id @default(uuid())
  nombre        String        @db.VarChar(255)
  titulo        String        @db.VarChar(255)
  etapa         Etapa
  creadoEn      DateTime      @default(now())
  actualizadoEn DateTime      @updatedAt
  observaciones Observacion[]
  proyecto      Proyecto      @relation(fields: [proyectoId], references: [id])
  proyectoId    String
  DocEtapa1     DocEtapa1[]
  DocEtapa2     DocEtapa2[]
  DocEtapa3     DocEtapa3[]
}

enum Etapa {
  etapa_1
  etapa_2
  etapa_3
}

model DocEtapa1 {
  id            String    @id @default(uuid())
  documento     Documento @relation(fields: [documentoId], references: [id])
  documentoId   String
  resumen       String
  palabrasClave String
  introduccion  String
  desarrollo    String
  conclusion    String
  referencias   String
}

model DocEtapa2 {
  id           String    @id @default(uuid())
  documento    Documento @relation(fields: [documentoId], references: [id])
  documentoId  String
  descripcion  String
  objGeneral   String
  objsMetas    String
  alcance      String
  herramientas String
}

model DocEtapa3 {
  id          String    @id @default(uuid())
  documento   Documento @relation(fields: [documentoId], references: [id])
  documentoId String
  url         String
}

model Observacion {
  id            String    @id @default(uuid())
  observacion   String    @db.VarChar(500)
  creadoEn      DateTime  @default(now())
  actualizadoEn DateTime  @updatedAt
  usuario       Usuario   @relation(fields: [usuarioId], references: [id])
  usuarioId     String
  documento     Documento @relation(fields: [documentoId], references: [id])
  documentoId   String
}

model ProyectosUsuarios {
  usuario    Usuario  @relation(fields: [usuarioId], references: [id])
  usuarioId  String
  proyecto   Proyecto @relation(fields: [proyectoId], references: [id])
  proyectoId String

  @@id([usuarioId, proyectoId])
}
